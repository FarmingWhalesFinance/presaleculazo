{"version":3,"sources":["assets/img/logo.svg","state/toasts/index.js","state/hooks.js","utils/getRpcUrl.js","utils/web3React.js","utils/wallet.js","hooks/useAuth.js","hooks/useEagerConnect.js","utils/web3.js","utils/contractHelpers.js","hooks/useWeb3.js","utils/Environment.js","utils/formatBalance.js","hooks/useBuy.js","App.js","reportWebVitals.js","redux/Reducers/Index.js","redux/store/rootReducer.js","redux/store/index.js","index.js"],"names":["toastsSlice","createSlice","name","initialState","data","reducers","push","state","action","payload","toastIndex","findIndex","toast","id","splice","unshift","remove","clear","actions","toastTypes","nodes","process","getNodeUrl","randomIndex","random","length","ConnectorNames","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","setupNetwork","a","provider","window","ethereum","request","method","params","toString","console","error","useAuth","useWeb3React","activate","deactivate","toastError","dispatch","useDispatch","useMemo","pushToast","title","description","kebabCase","type","toastInfo","toastSuccess","toastWarning","removeToast","clearToast","useToast","login","useCallback","connectorID","connector","UnsupportedChainIdError","walletConnectProvider","undefined","message","logout","useEagerConnect","useEffect","connectorId","localStorage","getItem","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getWeb3NoAccount","getBep20Contract","address","web3","abi","eth","Contract","getContract","useWeb3","library","refEth","useRef","useState","setweb3","current","Environment","presaleAddress","getEthValue","price","tokens","BigNumber","dividedBy","multipliedBy","pow","useBuy","account","contract","environment","buy","amount","methods","buyTokens","send","from","value","on","tx","transactionHash","App","num","setNum","Disconnect","setItem","Buy","e","preventDefault","log","className","Container","src","require","default","alt","onClick","Row","Col","lg","class","href","placeholder","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","combineReducers","UserReducer","balance","reward","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getLibrary","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc4c57b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ac46de7d.svg\";","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  data: [],\r\n}\r\n\r\nexport const toastsSlice = createSlice({\r\n  name: 'toasts',\r\n  initialState,\r\n  reducers: {\r\n    push: (state, action) => {\r\n      const { payload } = action\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\r\n\r\n      // If id already matches remove it before adding it to the top of the stack\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n\r\n      state.data.unshift(payload)\r\n    },\r\n    remove: (state, action) => {\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\r\n\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n    },\r\n    clear: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { clear, remove, push } = toastsSlice.actions\r\n\r\nexport default toastsSlice.reducer\r\n","import { useMemo } from 'react'\r\nimport { kebabCase } from 'lodash'\r\n// import { Toast, toastTypes } from '@babefinance/uikit'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n    push as pushToast,\r\n    remove as removeToast,\r\n    clear as clearToast,\r\n} from './actions'\r\n\r\nconst toastTypes = {\r\n    SUCCESS: \"string\",\r\n    DANGER: \"string\",\r\n    WARNING: \"string\",\r\n    INFO: \"string\",\r\n};\r\n\r\n\r\nexport const useToast = () => {\r\n    const dispatch = useDispatch()\r\n    const helpers = useMemo(() => {\r\n        const push = (toast) => dispatch(pushToast(toast))\r\n\r\n        return {\r\n            toastError: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\r\n            },\r\n            toastInfo: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\r\n            },\r\n            toastSuccess: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\r\n            },\r\n            toastWarning: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\r\n            },\r\n            push,\r\n            remove: (id) => dispatch(removeToast(id)),\r\n            clear: () => dispatch(clearToast()),\r\n        }\r\n    }, [dispatch])\r\n\r\n    return helpers\r\n}","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst ConnectorNames = {\r\n    Injected: \"injected\",\r\n    WalletConnect: \"walletconnect\",\r\n    BSC: \"bsc\"\r\n}\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n    rpc: { [chainId]: rpcUrl },\r\n    bridge: 'https://bridge.walletconnect.org',\r\n    qrcode: true,\r\n    pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName = {\r\n    [ConnectorNames.Injected]: injected,\r\n    [ConnectorNames.WalletConnect]: walletconnect,\r\n    [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider) => {\r\n    return provider\r\n}\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\n export const setupNetwork = async () => {\r\n  const provider = (window).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    // const chainId = 4\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            // chainName: 'Rinkeby Smart Chain TestNet',\r\n            // nativeCurrency: {\r\n            //   name: 'ETH',\r\n            //   symbol: 'ETH',\r\n            //   decimals: 18,\r\n            // },\r\n            // rpcUrls: [nodes],\r\n            // blockExplorerUrls: ['https://rinkeby.etherscan.com/'],\r\n\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress,\r\n  tokenSymbol,\r\n  tokenDecimals,\r\n  tokenImage,\r\n) => {\r\n  const tokenAdded = await (window).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { useToast } from '../state/hooks'\r\nimport { connectorsByName } from '../utils/web3React'\r\nimport { setupNetwork } from '../utils/wallet'\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  \r\n  const login = useCallback((connectorID) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n      activate(connector, async (error) => {\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          const hasSetup = await setupNetwork()\r\n          if (hasSetup) {\r\n            activate(connector)\r\n          }\r\n        } else {\r\n          connector.walletConnectProvider = undefined\r\n          toastError(error.name, error.message)\r\n        }\r\n      })\r\n    } else {\r\n      toastError(\"Can't find connector\", 'The connector config is wrong')\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return { login, logout: deactivate }\r\n}\r\n\r\nexport default useAuth\r\n","import { useEffect } from 'react'\r\nimport useAuth from './useAuth'\r\n\r\nconst ConnectorNames =  {\r\n    Injected : \"injected\",\r\n    WalletConnect : \"walletconnect\",\r\n    BSC : \"bsc\"\r\n}\r\n\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(\"connectorId\")\r\n\r\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\r\n    // into the Window object in time causing it to throw an error\r\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\r\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import Web3 from 'web3'\r\nimport getRpcUrl from './getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 })\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\nconst getWeb3NoAccount = () => {\r\n  return web3NoAccount\r\n}\r\n\r\nexport { getWeb3NoAccount }\r\nexport default web3NoAccount","import web3NoAccount from './web3'\r\nimport abi from './abi.json';\r\n\r\n\r\nconst getContract = (abi, address, web3) => {\r\n    const _web3 = web3 ?? web3NoAccount;\r\n    // console.log('_web3',_web3);\r\n    return new _web3.eth.Contract(abi, address)\r\n}\r\n\r\nexport const getBep20Contract = (address, web3) => {\r\n    return getContract(abi, address, web3)\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from '../utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","let Environment = {\r\n  presaleAddress: \"0x96Da953B035dA80eA2382fffAa2aBB4734A0941C\",\r\n};\r\n\r\nexport default Environment;\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance, decimals) => {\r\n    const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n    return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance, decimals) => {\r\n    return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n\r\nexport const getEthValue = (price, tokens) => {\r\n    const displayBalance = new BigNumber(tokens).dividedBy(price).multipliedBy(new BigNumber(10).pow(18))\r\n    return displayBalance\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useWeb3 from './useWeb3';\r\nimport environment from '../utils/Environment';\r\nimport { getBep20Contract } from '../utils/contractHelpers'\r\nimport { getEthValue } from \"../utils/formatBalance\"\r\n\r\n\r\nexport const useBuy = () => {\r\n    const { account } = useWeb3React();\r\n    const web3 = useWeb3();\r\n    const tokenAddress = environment.presaleAddress;\r\n    const contract = getBep20Contract(tokenAddress, web3)\r\n    const buyTokens = useCallback(async (tokens, price) => {\r\n        const amount = getEthValue(price, tokens)\r\n\r\n        const tx = await contract.methods.buyTokens(account).send({ from: account, value: amount })\r\n            .on('transactionHash', (tx) => { return tx.transactionHash });\r\n        return tx\r\n\r\n    }, [account, contract])\r\n\r\n    return { buy: buyTokens }\r\n}\r\n\r\nexport default useBuy;","import { useState, useCallback } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport useEagerConnect from './hooks/useEagerConnect';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport useAuth from './hooks/useAuth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useTotalSupply, useMaxSupply, usePrice } from './hooks/dataFetcher';\r\nimport useBuy from './hooks/useBuy';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction App() {\r\n  useEagerConnect();\r\n  const { buy } = useBuy();\r\n\r\n\r\n  const price = 800;\r\n  const { login, logout } = useAuth();\r\n  const { account } = useWeb3React();\r\n\r\n  const [num, setNum] = useState(10);\r\n\r\n\r\n\r\n\r\n  const connectMetamask = () => {\r\n    localStorage.setItem('connectorId', 'injected');\r\n    if (account) {\r\n      logout();\r\n    } else {\r\n      login('injected');\r\n    }\r\n  };\r\n\r\n\r\n  const Disconnect = async () => {\r\n    logout();\r\n    localStorage.setItem('connectorId', '');\r\n  };\r\n\r\n\r\n  const Buy = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    if (!account) {\r\n      toast.error('Please Connect Your Wallet');\r\n      return;\r\n    }\r\n\r\n\r\n    try {\r\n      await buy(num, price)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }, [buy])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div className=\"root\">\r\n       {/*  <div className=\"lefttree\">\r\n          <img\r\n            className=\"img-fluid leftimg\"\r\n            src={require(\"./assets/img/left.svg\").default}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"righttree\">\r\n          <img\r\n            className=\"img-fluid rightimg\"\r\n            src={require(\"./assets/img/right.png\").default}\r\n            alt=\"\"\r\n          />\r\n        </div> */}\r\n        {/* <div className=\"birdsdiv\">\r\n          <img\r\n            className=\"img-fluid birdimg\"\r\n            src={require(\"./assets/img/bird.png\").default}\r\n            alt=\"\"\r\n          />\r\n        </div> */}\r\n        <Container>\r\n        <div className=\"cus-navb mt-3 d-flex justify-content-between align-items-center\">\r\n           \r\n        <div className=\"logo\">\r\n              <img\r\n                className=\"img-fluid logo-img\"\r\n                src={require(\"./assets/img/logo.svg\").default}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"con-btn\">\r\n              {\r\n                !account ?\r\n                  <button className=\"cusbtn\" onClick={connectMetamask}>Connect Wallet</button> :\r\n                  <button className=\"cusbtn\" onClick={Disconnect}>Disconnect</button>\r\n              }\r\n            </div>\r\n            \r\n          </div>\r\n          <Row className=\"mt-1 pt-1\">\r\n          <Col\r\n              className=\" d-flex justify-content-center align-items-center \"\r\n              lg=\"1.5\"\r\n            >\r\n              \r\n              <div>\r\n                <h1 className=\"title\">Arbitrex Decentralized Exchange</h1>\r\n              </div> \r\n              \r\n              \r\n          </Col>\r\n          </Row>\r\n          <Row className=\"mt-3 pt-3\">\r\n          <Col\r\n              className=\" d-flex justify-content-end align-items-center \"\r\n              lg=\"30\"\r\n            >\r\n              <div class=\"dropdown\">\r\n  <button class=\"dropbtn\">Presale Details</button>\r\n  <div class=\"dropdown-content\">\r\n  <a href=\"#\">Start Time: 19 November 21:00 UTC</a>\r\n    <a href=\"#\">End Time: 20 November 21:00 UTC</a>\r\n    <a href=\"#\">Soft Cap: 30000$ USD</a>\r\n    <a href=\"#\">Hard Cap: 3000000$ USD </a>\r\n    <a href=\"#\">Price: 1.5$ USD </a>\r\n    <a href=\"https://medium.com/@arbitrex/announcing-presale-details-arbx-airdrop-8da864f8a31f \">Click here for more information about our presale!</a>\r\n  </div>\r\n</div>\r\n               \r\n          </Col>\r\n\r\n          </Row>\r\n               \r\n          \r\n          <Row className=\"mt-3 pt-3\">\r\n            <Col\r\n              className=\" d-flex justify-content-center align-items-center \"\r\n              lg=\"12\"\r\n            > \r\n            \r\n              <div className=\"\">\r\n              \r\n              <div className=\"text-center mt-4\">\r\n                  <h3 className=\"subtitle\">Join our Presale</h3>\r\n                </div>\r\n                <br>\r\n                </br>\r\n                <div className=\"button-mint d-flex justify-content-center\">\r\n                  {/* <button className=\"minus mr-3\" onClick={minus}>\r\n                    -\r\n                  </button> */}\r\n                  <div className=\"display-number d-flex justify-content-center align-items-center\">\r\n                    <input type=\"text\" placeholder=\" # of Tokens\" value={num} onChange={(e) => setNum(e.target.value)}></input>\r\n                  </div>\r\n                  {/* <button className=\"plus ml-3\" onClick={plus}>\r\n                    <img\r\n                      className=\"img-fluid opensealogo\"\r\n                      // src={require(\"./assets/img/plusimg.png\").default}\r\n                      alt=\"\"\r\n                    /> \r\n                    +\r\n                  </button>  */}\r\n                </div>\r\n                \r\n                <div className=\"mintnowdiv text-center mt-5\">\r\n                  <button className=\"cusbtn\" onClick={Buy}>Buy Now</button>\r\n                </div>\r\n                <div className=\"text-center mt-4\">\r\n                  {/* <h3 className=\"subtitle\"> {supply} / {supplyMax}</h3> */}\r\n                </div>\r\n                \r\n                <div className=\"text-center mt-4\">\r\n                  <h3 className=\"subtitle\">1 $ARBX = 1.5$ dollars</h3>\r\n                </div>\r\n                {/* <div className=\"text-center mt-5\">\r\n                  <img\r\n                    className=\"img-fluid opensealogo\"\r\n                    // src={require(\"./assets/img/opensea.png\").default}\r\n                    alt=\"\"\r\n                  />\r\n                </div> */}\r\n                \r\n                \r\n                \r\n              </div>\r\n            </Col>\r\n            {/* <Col lg=\"6\" className=\"mbr\">\r\n              <div className=\"right-img\">\r\n                <img\r\n                  className=\"img-fluid rightlogo\"\r\n                  // src={require(\"./assets/img/we.jpeg\").default}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </Col> */}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let initState = {};\r\n\r\nexport const UserReducer = (state = initState, action) => {\r\n  const { type, payload } = action; //object destructring\r\n  switch (type) {\r\n    case \"BALANCE\":\r\n      return {\r\n        ...state,\r\n        balance: payload,\r\n      };\r\n    case \"USER_REWARD\":\r\n      \r\n      return {\r\n        ...state,\r\n        reward: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from \"redux\";\r\nimport { UserReducer } from \"../Reducers/Index\";\r\n\r\nconst rootReducer = combineReducers({\r\n  UserReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\n// compose are enhancers used for composing middlewares for redux\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store/index';\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { getLibrary } from './utils/web3React'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </Web3ReactProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}